@model Financial.WebApplication.Models.ViewModels.AssetTypeRelationshipType.CreateViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Asset Types</h2>


@using (Html.BeginForm("Create", "AssetTypeRelationshipType", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <h4>Create Relationship</h4>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.SuppliedAssetTypeId, new { id = "supplied_asset_type_id" })

        <div class="form-group">
            @Html.LabelFor(model => model.SuppliedAssetTypeName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SuppliedAssetTypeName, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.SuppliedAssetTypeName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedRelationshipLevel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.SelectedRelationshipLevel, Model.RelationshipLevels, "-- Select a Relationship Level --",
                    new { @id = "selected_relationship_level", @class = "form-control", onchange = "updateRelationshipLevel($(this).val())" })
                @Html.ValidationMessageFor(model => model.SelectedRelationshipLevel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="relationship_types" style="display:none">
            @Html.HiddenFor(model => model.SelectedParentChildRelationshipTypeId, new { id = "selected_parent_child_relationship_type" })
        </div>

        <div id="link_asset_types" class="form-group" style="display:none">
            @Html.LabelFor(model => model.SelectedLinkedAssetTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.SelectedLinkedAssetTypeId, Model.LinkAssetTypes, "-- Select an Asset Type --",
                    new { @id = "select_link_asset_type", @class = "form-control", onchange = "updateLinkedAssetType($(this).val())" })
                @Html.ValidationMessageFor(model => model.SelectedLinkedAssetTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
                @Html.ActionLink("Cancel", "Details", "AssetType", new { id = Model.SuppliedAssetTypeId }, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        // Current View DIV
        var $relationship_types = $("#relationship_types");
        var $link_asset_types = $("#link_asset_types");

        // Current View VALUES
        var $supplied_asset_type_id = $("#supplied_asset_type_id");
        var $selected_relationship_level = $("#selected_relationship_level");
        var $selected_parent_child_relationship_type = $("#selected_parent_child_relationship_type");
        var $selected_link_asset_type = $("#selected_link_asset_type");

        // Partial View DIV
        var $select_relationship_type = $("#select_relationship_type");
        var $select_link_asset_type = $("#select_link_asset_type");

        $(document).ready(function () {
        });

        function updateRelationshipLevel(selectedLevel) {
            if (selectedLevel == 'Parent' || selectedLevel == 'Child') {
                // Show Relationship Types drop down list
                $link_asset_types.hide('fast');
                $relationship_types.hide('fast');
                showRelationshipTypes($supplied_asset_type_id.val(), selectedLevel);
            } else {
                // Hide other drop down lists
                $link_asset_types.hide('fast');
                $relationship_types.hide('fast');
                $link_asset_types.val("");
                $relationship_types.val("");
            }
        }

        function showRelationshipTypes(suppliedAssetTypeId, selectedLevel) {
            $.ajax({
                url: '/AssetTypeRelationshipType/DisplayParentChildRelationshipTypes',
                type: 'GET',
                data: {
                    suppliedAssetTypeId: suppliedAssetTypeId,
                    selectedRelationshipLevelId: selectedLevel
                },
                success: function (data) {
                    $relationship_types.html(data);
                    $relationship_types.show('fast');
                    updateRelationshipType()
                },
                error: function (e) {
                }
            });
        }

        function updateRelationshipType(selectedType) {

            $selected_parent_child_relationship_type.val(selectedType);

            console.log("Value Type: " + selectedType);
            console.log("Selected Type: " + $select_relationship_type.val());
            console.log("Transfer Type: " + $selected_parent_child_relationship_type.val());

            // store value from partial view in current view
            $selected_parent_child_relationship_type.val($relationship_types.val());
            $link_asset_types.show('fast');

            /*
            if (selectedType != null && selectedType != "") {
                // Show Link Asset Types drop down list
                $link_asset_types.hide('fast');
                showLinkAssetTypes($supplied_asset_type_id.val(), $selected_relationship_level.val());
            } else {
                // Hide drop down list
                $link_asset_types.hide('fast');
                $link_asset_types.val("");
            }
            */
        }

        /*
        function showLinkAssetTypes(suppliedAssetTypeId, selectedLevel) {
            $.ajax({
                url: '/AssetTypeRelationshipType/DisplayLinkAssetTypes',
                type: 'GET',
                data: {
                    suppliedAssetTypeId: suppliedAssetTypeId,
                    selectedRelationshipLevelId: selectedLevel
                },
                success: function (data) {
                    $link_asset_types.html(data);
                    $link_asset_types.show('fast');
                },
                error: function (e) {
                }
            });
        }

        function updateLinkedAssetType(selectedLink) {

            $selected_link_asset_type.val(selectedLink);

            console.log("Value Link: " + selectedLink);
            console.log("Selected Link: " + $select_link_asset_type.val())
            console.log("Transfer Link: " + $selected_link_asset_type.val());
        }
        */
    </script>

}
