@model Financial.Core.ViewModels.AssetTypeSettingType.CreateLinkedAssetTypesViewModel

@{
    ViewBag.Title = "CreateLinkedAssetTypes";
}
<h2>Setting Types</h2>

<h4>Create Linked Asset Types</h4>

<hr />

<div class="form-horizontal">

    <div class="form-group">
        @Html.LabelFor(model => model.SettingTypeName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SettingTypeName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
        </div>
    </div>

</div>

<hr />
<hr />

<h4>Linked Asset Types</h4>

<hr />

@using (Html.BeginForm("CreateLinkedAssetTypes", "AssetTypeSettingType", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @for (int i = 0; i < Model.CreateViewModels.Count(); i++)
        {

            @Html.HiddenFor(modelItem => Model.CreateViewModels[i].AssetTypeId)
            @Html.HiddenFor(modelItem => Model.CreateViewModels[i].SettingTypeId)

            <div class="form-group">
                <div class="col-md-offset-1 col-md-1 checkbox">
                    @Html.EditorFor(modelItem => Model.CreateViewModels[i].IsActive)
                </div>
                <div class="col-md-10">
                    @Html.DisplayFor(modelItem => Model.CreateViewModels[i].AssetTypeName, new { @class = "control-label" })
                </div>
            </div>

        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", "SettingType")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
