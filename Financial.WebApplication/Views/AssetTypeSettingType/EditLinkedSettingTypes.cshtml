@model Financial.WebApplication.Models.ViewModels.AssetTypeSettingType.EditLinkedSettingTypesViewModel

@{
    ViewBag.Title = "EditLinkedSettingTypes";
}

<h2>Asset Type</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.AssetTypeName)

        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.AssetTypeName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.AssetTypeName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.IsActive)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.IsActive)
            </dd>

        </dl>

        <hr />
        <h4>Edit Linked Setting Types</h4>
        <hr />

        <div>
            @{
                Html.RenderAction("IndexLinkedSettingTypes", "AssetTypeSettingType", new { assetTypeId = Model.AssetTypeId });
            }
        </div>

        @for (int i = 0; i < Model.SettingTypes.Count(); i++)
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @Html.HiddenFor(modelItem => Model.SettingTypes[i].AssetTypeSettingTypeId)
                    @Html.HiddenFor(modelItem => Model.SettingTypes[i].SettingTypeId)
                    @*@Html.CheckBoxFor(modelItem => Model.SettingTypes[i].IsActive, htmlAttributes: new { @class = "control-checkbox" })*@
                    @Html.Label(Model.SettingTypes[i].SettingTypeName, new { @class = "control-label" })
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
                @Html.ActionLink("Cancel", "Details", "AssetType", new { id = Model.AssetTypeId }, new { @class = "btn btn-default" })
            </div>
        </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
