@model Financial.WebApplication.Models.ViewModels.AssetTransaction.CreateViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Asset</h2>


@using (Html.BeginForm("Create", "AssetTransaction", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Create Transaction</h4>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.AssetId)

        <div class="form-group">
            @Html.LabelFor(model => model.AssetName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Label(Model.AssetName, new { @class = "control-label text-muted" })
                @Html.ValidationMessageFor(model => model.AssetName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AssetTypeName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Label(Model.AssetTypeName, new { @class = "control-label text-muted" })
                @Html.ValidationMessageFor(model => model.AssetTypeName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Update Asset", "SelectAssetToCreate", "AssetTransaction", null, null)
            </div>
        </div>

        <hr />
        <h4>Transaction</h4>
        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.CheckNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CheckNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CheckNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedTransactionTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedTransactionTypeId, Model.TransactionTypes, "-- Select a Type --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SelectedTransactionTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedTransactionCategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedTransactionCategoryId, Model.TransactionCategories, "-- Select a Category --", new { @class = "form-control" })
                @Html.ActionLink("Create New Category", "Create", "TransactionCategory", null, null)
                @Html.ValidationMessageFor(model => model.SelectedTransactionCategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="date_group" class="form-group">
            @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="date_group" class="form-group">
            @Html.LabelFor(model => model.ClearDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClearDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.ClearDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Note, 5, 0, new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
                @Html.ActionLink("Cancel", "Details", "Asset", new { id = Model.AssetId }, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="/resources/demos/style.css">
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script>
        $(function () {
            $(".datepicker").datepicker();
        });

        /*
        $("#datepicker").focus(function () {
            document.getElementById("date_group").style.paddingBottom = "180px";
        });

        $("#datepicker").focusout(function () {
            document.getElementById("date_group").style.paddingBottom = "0px";
        });

        $(function () {
            $('#datetimepicker').datetimepicker();
        });

        $('#datetimepicker').datetimepicker({
            timeFormat: 'hh:mm TT',
            interval: 60,
            dynamic: true,
            dropdown: true,
            scrollbar: true
        });
    */

        // return list of multiple selected values from dropdownlist
        var categoryList = document.getElementById("category_list");
        var arrayCategories = [];
        var selectedCategoriess = document.getElementById("selected_categories");
        var addCategory = document.getElementById("add_category");
        addCategory.addEventListener("click", function (event) {
            // display selected values in view
            var index = arrayCategories.length;
            arrayCategories[index] = categoryList.value;
            selectedCategoriess.innerHTML += categoryList.options[categoryList.selectedIndex].innerHTML;
            selectedCategoriess.innerHTML += "<br />";

            // store selected values in model
            $("#category_list_selected").val(JSON.stringify(arrayCategories));
        });
    </script>
}
